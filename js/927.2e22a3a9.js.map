{"version":3,"file":"js/927.2e22a3a9.js","mappings":"gOACEA,EAAAA,EAAAA,IAAW,O,uBAIb,GACEC,KAAM,aACNC,OACE,MAAO,IAGTC,UACE,IAAIC,GAAO,IAAIC,MAAOC,cACtBC,QAAQC,IAAI,iBAAkBJ,GAC9BK,KAAKC,YAKPC,QAAS,CAIPC,gBACEL,QAAQC,IAAI,kBACZ,IACED,QAAQC,IAAI,UACZ,MAAMK,QAAiBJ,KAAKK,cAC5BP,QAAQC,IAAI,WAAYK,GACxB,MAAME,QAAkBN,KAAKO,YAC7BT,QAAQC,IAAI,YAAaO,GACzBR,QAAQC,IAAI,SACZ,MAAOS,GACPV,QAAQC,IAAI,MAAOS,KAMvBL,iBACEL,QAAQC,IAAI,kBACZ,IACED,QAAQC,IAAI,UACZ,MAAMK,QAAiBK,IAAAA,IAAU,wCACjCX,QAAQC,IAAI,WAAYK,GACxB,MAAME,QAAkBG,IAAAA,IAAU,yCAClCX,QAAQC,IAAI,YAAaO,GACzBR,QAAQC,IAAI,SACZ,MAAOS,GACPV,QAAQC,IAAI,MAAOS,KAOvBE,aACE,MAAMC,EAAU,uCAChBC,MAAMD,GACHE,MAAKC,GAAQA,EAAKC,SAClBF,MAAKpB,GAAQO,KAAKgB,YAAYvB,MAKnCY,cACE,IAAIV,GAAO,IAAIC,MAAOC,cACtBC,QAAQC,IAAI,qBAAsBJ,GAClCc,IAAAA,IAAU,wCACPI,MAAKI,IACJtB,GAAO,IAAIC,MAAOC,cAClBC,QAAQC,IAAI,sBAAuBkB,EAAKtB,MAEzCuB,OAAOC,IACFA,EAAMC,SACRtB,QAAQC,IAAIoB,OAOpBZ,YACE,IAAIZ,GAAO,IAAIC,MAAOC,cACtBC,QAAQC,IAAI,mBAAoBJ,GAChCc,IAAAA,IAAU,yCACPI,MAAKI,IACJtB,GAAO,IAAIC,MAAOC,cAClBC,QAAQC,IAAI,oBAAqBkB,EAAKtB,MAEvCuB,OAAOC,IACNrB,QAAQC,IAAIoB,OAMlBH,YAAavB,GACX4B,SAASC,cAAc,OAAOC,UAAYC,KAAKC,UAAUhC,EAAM,KAAM,M,QC7F3E,MAAMiC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://my-vue-samples/./src/components/views/asyncAwait.vue","webpack://my-vue-samples/./src/components/views/asyncAwait.vue?0cc1"],"sourcesContent":["<template>\r\n  <pre></pre>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'asyncAwait',\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  created () {\r\n    let time = new Date().toISOString();\r\n    console.log('created called', time);\r\n    this.apiTest2();\r\n    // this.apiTest();\r\n    // this.getAleBeer2();\r\n    // this.getCoffee();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 잘못된 사용법 \r\n     */\r\n    async apiTest () {\r\n      console.log('apiTest called');\r\n      try {\r\n        console.log('try 진입')\r\n        const response = await this.getAleBeer2();\r\n        console.log('response', response);\r\n        const response2 = await this.getCoffee();\r\n        console.log('response2', response2);\r\n        console.log('try 끝')\r\n      } catch (err) {\r\n        console.log('err', err);\r\n      }\r\n    },\r\n    /**\r\n     * promise then을 사용하지 않은 방법\r\n     */\r\n    async apiTest2 () {\r\n      console.log('apiTest called');\r\n      try {\r\n        console.log('try 진입')\r\n        const response = await axios.get('https://api.sampleapis.com/beers/ale');\r\n        console.log('response', response);\r\n        const response2 = await axios.get('https://api.sampleapis.com/coffee/hot');\r\n        console.log('response2', response2);\r\n        console.log('try 끝')\r\n      } catch (err) {\r\n        console.log('err', err);\r\n      }\r\n    },\r\n    /**\r\n     * GET Ale Beer Get 샘플\r\n     * @deprecated 참고용이고 아래 형식으로 쓰자.\r\n     */\r\n    getAleBeer () {\r\n      const baseURL = 'https://api.sampleapis.com/beers/ale';\r\n      fetch(baseURL)\r\n        .then(resp => resp.json())\r\n        .then(data => this.displayData(data));\r\n    },\r\n    /**\r\n     * Get Ale Beer2 샘플\r\n     */\r\n    getAleBeer2 () {\r\n      let time = new Date().toISOString();\r\n      console.log('getAleBeer2 Called', time);\r\n      axios.get('https://api.sampleapis.com/beers/ale')\r\n        .then(res => {\r\n          time = new Date().toISOString();\r\n          console.log('getAleBeer2 Success', res, time);\r\n        })\r\n        .catch((error) => {\r\n          if (error.resonse) {\r\n            console.log(error);\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * Get Coffee 샘플\r\n     */\r\n    getCoffee () {\r\n      let time = new Date().toISOString();\r\n      console.log('getCoffee Called', time);\r\n      axios.get('https://api.sampleapis.com/coffee/hot')\r\n        .then(res => {\r\n          time = new Date().toISOString();\r\n          console.log('getCoffee Success', res, time);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n    },\r\n    /**\r\n     * Display Data 샘플\r\n     */\r\n    displayData (data) {\r\n      document.querySelector(\"pre\").innerHTML = JSON.stringify(data, null, 2);\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./asyncAwait.vue?vue&type=template&id=ac8acd2c\"\nimport script from \"./asyncAwait.vue?vue&type=script&lang=js\"\nexport * from \"./asyncAwait.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\MSFA\\\\my-vue-samples\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","name","data","created","time","Date","toISOString","console","log","this","apiTest2","methods","async","response","getAleBeer2","response2","getCoffee","err","axios","getAleBeer","baseURL","fetch","then","resp","json","displayData","res","catch","error","resonse","document","querySelector","innerHTML","JSON","stringify","__exports__","render"],"sourceRoot":""}